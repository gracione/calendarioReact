{"ast":null,"code":"var _jsxFileName = \"/var/www/html/React/calendarioReact/src/App.tsx\";\nimport React from 'react';\nimport Card from './components/card/Card';\nimport './global.ts';\nimport { Container } from './styles';\nimport { GlobalStyle } from \"./global\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  let data = new Date();\n  let mesAtual = data.getMonth() + 1;\n  let diaAtual = data.getDay();\n  let anoAtual = data.getFullYear();\n  let diasDoMes = new Date(anoAtual, mesAtual, 0).getDate();\n  let dadosCard = {\n    domingo: [],\n    segunda: [],\n    terca: [],\n    quarta: [],\n    quinta: [],\n    sexta: [],\n    sabado: []\n  };\n\n  for (let i = 1; i <= diasDoMes; i++) {\n    if (0 == new Date(anoAtual, mesAtual - 1, i).getDay()) {\n      dadosCard.domingo[1] = i;\n    }\n\n    if (1 == new Date(anoAtual, mesAtual - 1, i).getDay()) {\n      dadosCard.segunda[i] = i;\n    }\n\n    if (2 == new Date(anoAtual, mesAtual - 1, i).getDay()) {\n      dadosCard.terca[i] = i;\n    }\n\n    if (3 == new Date(anoAtual, mesAtual - 1, i).getDay()) {\n      dadosCard.quarta[i] = i;\n    }\n\n    if (4 == new Date(anoAtual, mesAtual - 1, i).getDay()) {\n      dadosCard.quinta[i] = i;\n    }\n\n    if (5 == new Date(anoAtual, mesAtual - 1, i).getDay()) {\n      dadosCard.sexta[i] = i;\n    }\n\n    if (6 == new Date(anoAtual, mesAtual - 1, i).getDay()) {\n      dadosCard.sabado[i] = i;\n    }\n  }\n\n  console.log(diasDoMes); //console.log(diasd);\n\n  let card = /*#__PURE__*/_jsxDEV(Card, {\n    dias: dadosCard\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 14\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [card, /*#__PURE__*/_jsxDEV(GlobalStyle, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Card","Container","GlobalStyle","App","data","Date","mesAtual","getMonth","diaAtual","getDay","anoAtual","getFullYear","diasDoMes","getDate","dadosCard","domingo","segunda","terca","quarta","quinta","sexta","sabado","i","console","log","card"],"sources":["/var/www/html/React/calendarioReact/src/App.tsx"],"sourcesContent":["import React from 'react';\nimport Card from './components/card/Card';\nimport './global.ts';\nimport { Container } from './styles';\nimport { GlobalStyle } from \"./global\";\n\n\nfunction App() {\n  let data = new Date();\n  let mesAtual = data.getMonth() + 1;\n  let diaAtual = data.getDay();\n  let anoAtual = data.getFullYear();\n\n  let diasDoMes = new Date(anoAtual, mesAtual, 0).getDate();\n\n  let dadosCard = {\n    domingo: []\n    , segunda: []\n    , terca: []\n    , quarta: []\n    , quinta: []\n    , sexta: []\n    , sabado: []\n  };\n\n  for (let i = 1; i <= diasDoMes; i++) {\n    if (0 == new Date(anoAtual, mesAtual - 1, i).getDay()) {\n      dadosCard.domingo[1] = i;\n    }\n    if (1 == new Date(anoAtual, mesAtual - 1, i).getDay()) {\n      dadosCard.segunda[i] = i;\n    }\n    if (2 == new Date(anoAtual, mesAtual - 1, i).getDay()) {\n      dadosCard.terca[i] = i;\n    }\n    if (3 == new Date(anoAtual, mesAtual - 1, i).getDay()) {\n      dadosCard.quarta[i] = i;\n    }\n    if (4 == new Date(anoAtual, mesAtual - 1, i).getDay()) {\n      dadosCard.quinta[i] = i;\n    }\n    if (5 == new Date(anoAtual, mesAtual - 1, i).getDay()) {\n      dadosCard.sexta[i] = i;\n    }\n    if (6 == new Date(anoAtual, mesAtual - 1, i).getDay()) {\n      dadosCard.sabado[i] = i;\n    }\n  }\n\n\n\n  console.log(diasDoMes);\n  //console.log(diasd);\n\n  let card = <Card\n    dias={dadosCard}\n  ></Card>;\n  return (\n    <Container>\n      {card}\n      <GlobalStyle />\n    </Container>\n  );\n}\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module"}